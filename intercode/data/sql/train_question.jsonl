{"idx": 184, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are flight numbers of flights arriving at City \"Aberdeen\"?"}
{"idx": 79, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is the name and capacity of the stadium with the most concerts after 2013 ?"}
{"idx": 90, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the full names of all players, sorted by birth date?"}
{"idx": 19, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the maximum and minimum share of performances whose type is not \"Live final\"."}
{"idx": 111, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name."}
{"idx": 7, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Which region is the city Kabul located in?"}
{"idx": 23, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the ids, names, and descriptions for all documents?"}
{"idx": 195, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the names of players who won in both 2013 and 2016?"}
{"idx": 129, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Which model saves the most gasoline? That is to say, have the maximum miles per gallon."}
{"idx": 101, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Which continent speaks the most languages?"}
{"idx": 39, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Return the names of the contestants whose names contain the substring 'Al' ."}
{"idx": 5, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the population and life expectancies in Brazil?"}
{"idx": 138, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: How many battles did not lose any ship with tonnage '225'?"}
{"idx": 171, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is the full name of each car maker, along with its id and how many models it produces?"}
{"idx": 41, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the African countries that have a  population less than any country in Asia?"}
{"idx": 176, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Return the names of the 3 countries with the fewest people."}
{"idx": 177, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Give the language that is spoken in the most countries."}
{"idx": 192, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Which airlines have less than 200 flights?"}
{"idx": 150, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Find the make and production time of the cars that were produced in the earliest year?"}
{"idx": 15, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the names and ids of all countries with at least one car maker?"}
{"idx": 67, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Give average earnings of poker players who are taller than 200."}
{"idx": 36, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Which of the countries has the most car makers? List the country name."}
{"idx": 51, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: For students who have pets , how many pets does each student have ? list their ids instead of names ."}
{"idx": 164, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: what are the different names of the singers that have sales more than 300000?"}
{"idx": 95, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the names of all stadiums that did not have a concert in 2014?"}
{"idx": 43, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is the name of the high schooler who has the greatest number of friends?"}
{"idx": 175, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?"}
{"idx": 188, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: How many flights arriving in Aberdeen city?"}
{"idx": 103, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is average life expectancy in the countries where English is not the official language?"}
{"idx": 20, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is the id of the semester that had both Masters and Bachelors students enrolled?"}
{"idx": 149, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the names of people who do not play poker?"}
{"idx": 169, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the Asian countries which have a population larger than that of any country in Africa?"}
{"idx": 50, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Show the names of students who have a grade higher than 5 and have at least 2 friends."}
{"idx": 160, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Return the money rank of the poker player with the greatest height."}
{"idx": 0, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Find the name, population and expected life length of asian country with the largest area?"}
{"idx": 73, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the name and results of the battles when the bulgarian commander is not 'Boril'"}
{"idx": 102, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Which dogs are of the rarest breed? Show their names and treatment dates."}
{"idx": 185, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no."}
{"idx": 61, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the contestant numbers and names of the contestants who had at least two votes?"}
{"idx": 120, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the names of the singers who performed in a concert in 2014?"}
{"idx": 10, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is the age and hometown of every teacher?"}
{"idx": 14, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: How many 'United Airlines' flights go to Airport 'ASY'?"}
{"idx": 85, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?"}
{"idx": 122, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Count the number of paragraphs in the document named 'Summer Show'."}
{"idx": 196, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is the first name and gender of the all the students who have more than one pet?"}
{"idx": 174, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is the name of the semester with no students enrolled?"}
{"idx": 189, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Find the number of players for each hand type."}
{"idx": 190, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the ids of high school students who do not have friends?"}
{"idx": 13, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Which dogs have not cost their owner more than 1000 for treatment ? List the dog names ."}
{"idx": 60, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Find the number of cartoons directed by each of the listed directors."}
{"idx": 112, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: List all airline names and their abbreviations in \"USA\"."}
{"idx": 151, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the names of the stadiums without any concerts?"}
{"idx": 134, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Give the names of poker players who have earnings above 300000."}
{"idx": 25, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is the number of distinct continents where Chinese is spoken?"}
{"idx": 54, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: For each hometown, how many teachers are there?"}
{"idx": 156, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?"}
{"idx": 34, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is the average weight of cars each year?"}
{"idx": 198, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is the id, line 1, and line 2 of the address with the most students?"}
{"idx": 59, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Show the names of conductors that have conducted more than one orchestras."}
{"idx": 145, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low."}
{"idx": 40, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the names of high schoolers who have likes, and how many likes does each have?"}
{"idx": 80, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What major is every student who does not own a cat as a pet, and also how old are they?"}
{"idx": 89, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is the model of the car with the smallest amount of horsepower?"}
{"idx": 123, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the number of concerts that occurred in the stadium with the largest capacity ?"}
{"idx": 130, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: List the first name and birth date of all players from the country with code USA."}
{"idx": 165, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: For each shop, return the number of employees working there and the name of the shop."}
{"idx": 131, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Which template type code has most number of templates?"}
{"idx": 154, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: List the names and birth dates of people in ascending alphabetical order of name."}
{"idx": 62, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Return the birth date of the poker player with the lowest earnings."}
{"idx": 119, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Return the names of friends of the high school student Kyle."}
{"idx": 84, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: How many pets are owned by students that have an age greater than 20?"}
{"idx": 167, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Count the number of orchestras that have CD or DVD as their record format."}
{"idx": 71, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?"}
{"idx": 53, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?"}
{"idx": 173, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: For each citizenship, what is the maximum net worth?"}
{"idx": 58, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Find the average age of the dogs who went through treatments."}
{"idx": 113, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Give the names of nations that speak both English and French."}
{"idx": 187, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is the number of car models created by the car maker American Motor Company?"}
{"idx": 29, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: List the last name of the owner owning the youngest dog."}
{"idx": 199, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Which department offers the most number of degrees? List department name and id."}
{"idx": 3, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Find the city with the largest population that uses English."}
{"idx": 135, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Which city and country is the Alton airport at?"}
{"idx": 46, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is the name of the museum that had no visitor yet?"}
{"idx": 83, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Which Asian countries have a population that is larger than any country in Africa?"}
{"idx": 37, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Show the stadium name and capacity with most number of concerts in year 2014 or after."}
{"idx": 182, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the first names and birth dates of players from the USA?"}
{"idx": 6, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?"}
{"idx": 128, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the distinct states and create time of all votes?"}
{"idx": 144, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What the smallest version number and its template type code?"}
{"idx": 148, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is the area code in which the most voters voted?"}
{"idx": 94, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: what are all the addresses including line 1 and line 2?"}
{"idx": 12, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Show countries where a singer above age 40 and a singer below 30 are from."}
{"idx": 92, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Find the id of the pet owned by student whose last name is \u2018Smith\u2019."}
{"idx": 2, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Give the names of countries that are in Europe and have a population equal to 80000."}
{"idx": 68, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?"}
{"idx": 86, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Which distinct car models are the produced after 1980?"}
{"idx": 163, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What are the names of conductors as well as the corresonding orchestras that they have conducted?"}
{"idx": 8, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Find the first name and age of students who have a pet."}
{"idx": 27, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: What is the maximum accelerate for all the different cylinders?"}
{"idx": 97, "question": "In a SQL-based game, your aim is to construct SQL commands that address a specific natural language query (i.e. \"Finding a student with both cat and dog pets\"). The best strategy for this game is to first write SQL commands that help you learn about the tables that you have access to. For instance, you might use `SHOW TABLES` and `DESC <table name>` to learn more about the tables you have access to. The gameplay revolves around submitting these commands, each turn, to gradually build towards a command that perfectly answers the query. You're guided by feedback in the form of an output showing your query result. The ultimate goal is to successfully answer the question.\nQuestion: Give the city and country for the Alton airport."}
